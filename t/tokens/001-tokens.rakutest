
use v6.d;
use lib 'lib';
use BDD::Behave::Grammar;
use Test;

plan 18;

ok Grammar.parse('"', :rule<double-quote>), '<double-quote> parses " inside \'\'';
nok Grammar.parse("'", :rule<double-quote>), '<double-quote> does not parse \' inside ""';

ok Grammar.parse("'", :rule<single-quote>), '<single-quote> parse \' inside ""';
nok Grammar.parse('"', :rule<single-quote>), '<single-quote> does not parse " inside \'\'';

ok Grammar.parse('word', :rule<word>), '<word> parses "word"';
nok Grammar.parse('.word', :rule<word>), '<word> does not parse ".word"';
nok Grammar.parse('word x', :rule<word>), '<word> does not parse "word x"';
nok Grammar.parse('x word', :rule<word>), '<word> does not parse "x word"';

ok Grammar.parse('.word', :rule<dot-method>), '<dot-method> parses ".word"';
nok Grammar.parse('word', :rule<dot-method>), '<dot-method> does not parse "word"';
nok Grammar.parse('.word x', :rule<dot-method>), '<dot-method> does not parse ".word x"';
nok Grammar.parse('x .word', :rule<dot-method>), '<dot-method> does not parse "x .word"';

ok Grammar.parse(':foo', :rule<symbol>), '<symbol> parses ":foo"';
nok Grammar.parse(':foo x', :rule<symbol>), '<symbol> does not parse ":foo x"';
nok Grammar.parse('x :foo', :rule<symbol>), '<symbol> does not parse "x :foo"';

ok Grammar.parse('42', :rule<block-content>), '<block-content> parses "42"';
ok Grammar.parse(':foo', :rule<block-content>), '<block-content> parses ":foo"';
ok Grammar.parse('bar', :rule<block-content>), '<block-content> parses "bar"';
